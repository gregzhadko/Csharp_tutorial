using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lesson3
{
    class Program
    {
        static void Main(string[] args)
        {
            //Еще парочка типов данных:

            double
                d = 1.2; // так называемый тип данных с плавающей точкой, а если по русски то просто для хранения дробей.
            float
                f = 1.2f; // практически тоже что и double, есть кое-какие различия, но пока об этом не надо заморачиваться
            char
                c = 'c'; // это просто символ, внимательный читатель может спросить, связано ли это как-то с типом string.
            // Ответ: да, string это лишь набор char'ов

            //Как уже говорилось раньше, к переменным можно примянть различные базовые операции арифметики, например для переменных типа int:
            // + сложение двух переменных: i+j
            // - вычитание
            // * умножение
            // / деление
            // тут все несложно. До этого мы рассматривали оператор += который к уже существующему значению прибавляет еще какое-то значение,
            // точно такие же операторы есть и для вычитания, умножения и деления, например можно написать так:
            int i = 10;
            i *= 5; // Что будет лежать в i?

            //Помимо этого есть операторы сравнения:
            // > - Больше
            // < - меньше
            // <= - меньше или равное
            // >= - больше или равно
            // == проверка на равенство.
            // результатом любой из этих операций будет значение true или false.
            // А теперь внимание вопрос, какой тип данных может принимать true или false?

            b = d > 10; //в b лежит значение true

            //Переходим к чему-то поинтереснее чем просто переменные и типы данных

            if (b
            ) // Это условие. Как нетрудно догадаться, если условие внутри круглых скобок верно (равно true), то будут выполняться операции внутри фигурных скобок
            {
                Console.WriteLine("d больше 10");
            }
            else //если b равное false, то будет выполняться часть кода помещенная в блок else. Но вообще блок else необязательный, его можно не писать (все зависит от предпочтений)
            {
                Console.WriteLine("d меньше или равно 10");
            }

            //внутри круглых скобок блока if всегда лежит значение типа bool


            //Задание 1: Написать программу которая спрашивает у пользователя его возраст и если пользователю 18 лет и больше, пишет что он совершеннолетний, иначе что еще молодой
            //Подсказка: Для того чтобы преобразовать string в int, нужно использовать следующее вырожение (пока просто запомнить):
            int j = Convert.ToInt32("10");

            //Кроме того есть еще условие if else. Работает оно так:

            if (d > 10)
            {
                Console.WriteLine("d больше 10");
            }
            else if (d < 10) // таких блоков может быть хоть сколько угодно
            {
                Console.WriteLine("d меньше 10");
            }
            else
            {
                Console.WriteLine("d равно 10");
            }

            //Задание 2: Написать программу которая спрашивает у пользователя имя.
            //Если имя пользователя "Гриша", программа пишет: "Гриша Хорош"
            //Если имя пользователя "Аня" программа пишет: "Аня Хороша"
            //Иначе пишет: "<Имя_Пользователя> неизвестно для меня"
            //нужно использовать else if


            //Вопрос со звездочкой: Корректен ли следующий код (скопилируется ли программа):

            /*
            int k = 10;
            string s = "10";

            if (k == s)
            {
                Console.WriteLine("Равны");
            }
            */

        }


        private static bool b;
    }
}
