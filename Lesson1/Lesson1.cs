using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lesson1
{
    class Lesson1
    {
        static void Main(string[] args)
        {
            int i;              // объявление целочисленной переменной
            string s;           // объявление строковой переменной
            bool b;             // объявление булевой переменной (может быть равна только true or false)

                                //int, string, bool и др. называют типами данных, или просто типами

                                //Пока трех типов переменных хватит, но на самом деле их больше.

                                /*Нельзя объявлять две переменные с одинковым именем (даже если они имеют разный тип), например я не могу написать еще раз так
                                bool b;
                                */
            i = 10;             //Инициализация переменной конкретным значением.
            s = "строка1";   // Инициализация строки
            b = true;           // инициализация булевого значения

                                // не забываем ставить ; в конце каждой строчки

                                //объявление и инициализацию переменных можно объединять. Например можно написать так:
            int j = 20;         //точно также можно делать с переменными любого типа.


                                //почти все базовые типы данных (кроме bool) поддерживают базовые операции:

            int sum = i + j; // в переменной sum лежит число 30
            sum = sum + 10;  // а теперь в sum лежит уже число 40
            sum += 10;       // Более короткая запись строки выше, но операция одна и та же.

            int m = sum * 2; //операция умножения

            sum *= 10;

            //вопрос: чему сейчас равно sum? а чему равно m?

                                    //точно также можно складывать строки:
            string result = s + s;  //Интуитивно можно догадаться что теперь в result будет лежать значение "строка1строка1"

            result = result + "строка2";    //работает аналогично как и в случае с int
            result += "строка2";            //работает аналогично как и в случае с int

            //вопрос: чем равно значение переменной result?

                                    //в предыдущем уроке у нас была строка: Console.ReadLine();
                                    //как уже говорилось, она считывает строку с консоли, т.к. образом можно инициализировать новую строку так:

            //string consoleString = Console.ReadLine(); //пока этот синтаксис лучше просто запомнить, позже объясню подробнее что это значит

            //Задание 1:
            //Предположим у нас есть две переменные:
            string hello = "hello";
            string world = "world";
            //Необходимо написать одну строку которая бы выводила на экран "hello world" используя эти переменные:
            //Console.WriteLine(hello + " " + world);
            //onsole.ReadLine();



            //Задание 2:
            //Написать программу которая спрашивает имя пользователя, пользователь его вводит, программа пишет: "Привет, <имя_пользователя>"
            //Далее программа спрашивает возраст пользователя, и после его ввода, точно также выводит его на экран
            //(не забудь о том что консоль сразу же закроется если не написать необходимую строку, см. предыдущий урок)

            //Console.WriteLine("Введите имя пользователя-");
            ////Console.ReadLine();
            //string g = Console.ReadLine();
            //Console.WriteLine("Привет," + g);
            //Console.WriteLine("How old are you?");
            //string f = Console.ReadLine();
            //Console.WriteLine("Hi,"+ f +g);
            //Console.ReadLine();


            //Вопрос со звездочкой:
            int a = 1;
            a += (a + a) + a; // чему равно а?
            Console.WriteLine(a);
            Console.ReadLine();
        }
    }
}
